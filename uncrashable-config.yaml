networkConfig:
  entityIdPrefixes:
    - networks:
        - sepolia
      prefix: ""
entitySettings:
  WithdrawalBatch:
    useDefault:
      scaledAmountBurned: {}
      normalizedAmountPaid: {}
      lenderWithdrawalsCount: {}
      completedWithdrawalsCount: {}
      isCompleted: {}
      scaledTotalAmount: {}
      isExpired: {}
      isClosed: {}
      paymentsCount: {}
      totalNormalizedRequests: {}
      totalInterestEarned: {}
      normalizedAmountClaimed: {}
    entityId:
      - type: constant
        value: "WDBATCH"
      - name: market
        type: Bytes
      - name: expiry
        type: BigInt
    setters:
      - name: setIsExpired
        fields:
          - isExpired
      - name: setIsClosed
        fields:
          - isClosed
  WithdrawalBatchPayment:
    useDefault: {}
    entityId:
      - type: constant
        value: "WDPMT"
      - name: market
        type: Bytes
      - name: expiry
        type: BigInt
      - name: paymentIndex
        type: Int
  LenderWithdrawalStatus:
    useDefault:
      normalizedAmountWithdrawn: {}
      scaledAmount: {}
      executionsCount: {}
      requestsCount: {}
      totalNormalizedRequests: {}
      isCompleted: {}
    entityId:
      - type: constant
        value: "WDSTAT"
      - name: market
        type: Bytes
      - name: expiry
        type: BigInt
      - name: account
        type: Bytes
    setters:
      - name: setScaledAmount
        fields:
          - scaledAmount
      - name: setNormalizedAmountWithdrawn
        fields:
          - normalizedAmountWithdrawn
  LenderAccount:
    useDefault:
      scaledBalance: {}
      role: {}
      totalDeposited: {}
      totalInterestEarned: {}
      numPendingWithdrawalBatches: {}
    entityId:
      - type: constant
        value: "LENDER"
      - name: market
        type: Bytes
      - name: address
        type: Bytes
    setters:
      - name: setScaledBalance
        fields:
          - scaledBalance
      - name: setRole
        fields:
          - role
  WithdrawalExecution:
    useDefault: {}
    entityId:
      - type: constant
        value: "WDEXEC"
      - name: market
        type: Bytes
      - name: expiry
        type: BigInt
      - name: account
        type: Bytes
      - name: executionIndex
        type: Int
  WithdrawalRequest:
    useDefault: {}
    entityId:
      - type: constant
        value: "WDEXEC"
      - name: market
        type: Bytes
      - name: expiry
        type: BigInt
      - name: account
        type: Bytes
      - name: requestIndex
        type: Int
  Market:
    useDefault:
      isClosed: {}
      pendingProtocolFees: {}
      normalizedUnclaimedWithdrawals: {}
      scaledTotalSupply: {}
      scaledPendingWithdrawals: {}
      pendingWithdrawalExpiry: {}
      isDelinquent: {}
      isIncurringPenalties: {}
      timeDelinquent: {}
      totalBorrowed: {}
      totalRepaid: {}
      totalBaseInterestAccrued: {}
      totalDelinquencyFeesAccrued: {}
      totalProtocolFeesAccrued: {}
      totalDeposited: {}
      originalAnnualInterestBips: {}
      temporaryReserveRatioActive: {}
      originalReserveRatioBips: {}
      temporaryReserveRatioExpiry: {}
      eventIndex: {}
      interestAccruedIndex: {}
      delinquencyStatusChangedIndex: {}
      borrowIndex: {}
      depositIndex: {}
      feesCollectedIndex: {}
      debtRepaidIndex: {}
      maxTotalSupplyUpdatedIndex: {}
      annualInterestBipsUpdatedIndex: {}
      withdrawalRequestsIndex: {}
      protocolFeeBipsUpdatedIndex: {}
      fixedTermUpdatedIndex: {}
      minimumDepositUpdatedIndex: {}
      forceBuyBackIndex: {}
    entityId:
      - name: id
        type: Bytes
    setters:
      - name: setMaxTotalSupply
        fields:
          - maxTotalSupply
      - name: setAnnualInterestBips
        fields:
          - annualInterestBips
      - name: setReserveRatioBips
        fields:
          - reserveRatioBips
      - name: setMarketIsClosed
        fields:
          - isClosed
      - name: setIsDelinquent
        fields:
          - isDelinquent
      - name: setPendingWithdrawalExpiry
        fields:
          - pendingWithdrawalExpiry
  ControllerFactory:
    useDefault:
      feeRecipient: {}
      protocolFeeBips: {}
      originationFeeAmount: {}
    entityId:
      - name: factory
        type: Bytes
  Controller:
    useDefault:
      numMarkets: {}
    entityId:
      - name: controller
        type: Bytes
  Token:
    useDefault: {}
    entityId:
      - type: constant
        value: "TKN"
      - name: token
        type: Bytes
  LenderAuthorization:
    useDefault: {}
    entityId:
      - type: constant
        value: "AUTH"
      - name: controller
        type: Bytes
      - name: lender
        type: Bytes
  ParameterConstraints:
    useDefault: {}
    entityId:
      - type: constant
        value: "CSNT"
      - name: factory
        type: Bytes
  RegisteredBorrower:
    useDefault: {}
    entityId:
      - type: constant
        value: "BRWR"
      - name: archController
        type: Bytes
      - name: borrower
        type: Bytes
  ArchController:
    useDefault: {}
    entityId:
      - name: archController
        type: Bytes
  MarketInterestAccrued:
    useDefault: {}
  DelinquencyStatusChanged:
    useDefault: {}
    entityId:
      - type: constant
        value: "DLNQ"
      - name: market
        type: Bytes
      - name: delinquencyStatusChangedIndex
        type: Int
  Borrow:
    useDefault: {}
    entityId:
      - type: constant
        value: "BORROW"
      - name: market
        type: Bytes
      - name: borrowIndex
        type: Int
  Deposit:
    useDefault: {}
    entityId:
      - type: constant
        value: "DPST"
      - name: market
        type: Bytes
      - name: depositIndex
        type: Int
  FixedTermUpdated:
    useDefault: {}
  FeesCollected:
    useDefault: {}
    entityId:
      - type: constant
        value: "FEES"
      - name: market
        type: Bytes
      - name: feesCollectedIndex
        type: Int
  DebtRepaid:
    useDefault: {}
    entityId:
      - type: constant
        value: "REPAY"
      - name: market
        type: Bytes
      - name: debtRepaidIndex
        type: Int
  MaxTotalSupplyUpdated:
    useDefault: {}
    entityId:
      - type: constant
        value: "MTSU"
      - name: market
        type: Bytes
      - name: maxTotalSupplyUpdatedIndex
        type: Int
  AnnualInterestBipsUpdated:
    useDefault: {}
    entityId:
      - type: constant
        value: "AIU"
      - name: market
        type: Bytes
      - name: annualInterestBipsUpdatedIndex
        type: Int
  ProtocolFeeBipsUpdated:
    useDefault: {}
    entityId:
      - type: constant
        value: "PFU"
      - name: market
        type: Bytes
      - name: protocolFeeBipsUpdatedIndex
        type: Int
  ForceBuyBack:
    useDefault: {}
    entityId:
      - type: constant
        value: "FBB"
      - name: market
        type: Bytes
      - name: forceBuyBackIndex
        type: Int
  # ============================================================================ #
  #                                 Hooks Factory                                #
  # ============================================================================ #
  HooksFactory:
    useDefault:
      eventIndex: {}
    entityId:
      - name: factory
        type: Bytes
  HooksTemplate:
    useDefault:
      disabled: {}
    entityId:
      - name: template
        type: Bytes
  HooksTemplateAdded:
    useDefault: {}
    entityId: # TEMPLATEADD-template-eventIndex
      - type: constant
        value: "TEMPLATEADD"
      - name: template
        type: Bytes
      - name: eventIndex
        type: Int
  HooksTemplateDisabled:
    useDefault: {}
    entityId: # TEMPLATEDISABLE-template-eventIndex
      - type: constant
        value: "TEMPLATEDISABLE"
      - name: template
        type: Bytes
      - name: eventIndex
        type: Int
  HooksTemplateFeesUpdated:
    useDefault: {}
    entityId: # TEMPLATEFEEUPDATE-template-eventIndex
      - type: constant
        value: "TEMPLATEFEEUPDATE"
      - name: template
        type: Bytes
      - name: eventIndex
        type: Int
  HooksInstanceDeployed:
    useDefault: {}
    entityId: # HOOKSINSTANCEDEPLOYED-hooksAddress
      - name: hooksAddress
        type: Bytes
      - name: eventIndex
        type: Int

  LenderHooksAccess:
    useDefault:
      isBlockedFromDeposits: {}
    entityId:
      - type: constant
        value: "LenderHooksAccess"
      - name: hooksAddress
        type: Bytes
      - name: lenderAddress
        type: Bytes
  KnownLenderStatus:
    useDefault: {}
    entityId:
      - type: constant
        value: KNOWNLENDER
      - name: marketAddress
        type: Bytes
      - name: lenderAddress
        type: Bytes
  HooksInstance:
    useDefault:
      eventIndex: {}
      numMarkets: {}
    entityId:
      - name: hooksAddress
        type: Bytes
  RoleProvider:
    useDefault: {}
    entityId: # PROVIDER-hooksAddress-providerAddress
      - type: constant
        value: "PROVIDER"
      - name: hooksAddress
        type: Bytes
      - name: providerAddress
        type: Bytes
  HooksConfig:
    useDefault: {}
    entityId:
      - type: constant
        value: "HOOKSCONFIG"
      - name: marketAddress
        type: Bytes
  RoleProviderUpdated:
    useDefault: {}
  MinimumDepositUpdated:
    useDefault: {}
  DisabledForceBuyBacks:
    useDefault: {}
  RoleProviderAdded:
    useDefault: {}
  RoleProviderRemoved:
    useDefault: {}
  AccountBlockedFromDeposits:
    useDefault: {} 
  AccountUnblockedFromDeposits:
    useDefault: {} 
  AccountMadeFirstDeposit:
    useDefault: {}
  AccountAccessGranted:
    useDefault: {}
  AccountAccessRevoked:
    useDefault: {}
